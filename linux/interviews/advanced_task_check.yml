---
- name: Advanced Linux Admin Practical Assessment
  hosts: candidate_vm
  become: yes
  gather_facts: yes

  vars:
    # Pre-requisite: Ensure /dev/sdb and /dev/sdc are available as unused block devices for LVM tasks.
    # Adjust device names as per your test VM setup.
    lvm_pv_device1: /dev/xvdbb
    lvm_pv_device2: /dev/xvdbb
    lvm_vg_name: "datavg"
    lvm_lv_name: "applv"
    lvm_lv_mount_point: "/mnt/appdata"
    lvm_lv_initial_size: "512M"
    lvm_lv_extended_size_abs: "768M" # Absolute size after extension

  tasks:
    - name: "ADVANCED 1.4: Ensure firewall blocks incoming TCP traffic on port 9090 but allows 8080"
      ansible.builtin.ufw:
        rule: allow
        port: '8080'
        proto: tcp
      check_mode: yes
      register: ufw_allow_8080
      failed_when: ufw_allow_8080.changed
    - name: Check ufw rule for port 9090 deny (or not explicitly allowed)
      # This is harder to check for "blocked". Easiest is to check "not allowed".
      # For an explicit deny rule:
      ansible.builtin.ufw:
        rule: deny
        port: '9090'
        proto: tcp
      check_mode: yes
      register: ufw_deny_9090
      failed_when: ufw_deny_9090.changed # If a deny rule had to be added, it wasn't there
      tags: advanced_networking

    - name: "ADVANCED 1.5: Ensure LVM volume group '{{ lvm_vg_name }}' exists"
      ansible.builtin.lvg:
        vg: "{{ lvm_vg_name }}"
        pvs:
          - "{{ lvm_pv_device1 }}"
          - "{{ lvm_pv_device2 }}"
      check_mode: yes
      register: check_lvm_vg
      tags: advanced_lvm
    - name: Debug
      ansible.builtin.debug:
        msg: "check_lvm_vg: {{ check_lvm_vg }}"
      